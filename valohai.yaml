- step:
    name: master-keras-mnist
    image: uber/horovod:0.13.11-tf1.10.0-torch0.4.0-py3.5
    command:
      - mkdir -p ~/.keras/datasets/
      - ln -s /valohai/inputs/mnist/* ~/.keras/datasets/
      - mkdir /root/.ssh && chmod 0700 /root/.ssh
      - cp /valohai/inputs/ssh/horovod_example_ssh /root/.ssh/id_rsa
      - chmod 0700 /root/.ssh/id_rsa
      - mpirun -np 3 -H 172.31.21.206:1,172.31.22.18:1,172.31.28.84:1 -mca plm_rsh_args "-p 12345" python keras_mnist_advanced.py {parameters}
      - mv checkpoint-*.h5 /valohai/outputs
    inputs:
      - name: mnist
        default: https://s3.amazonaws.com/img-datasets/mnist.npz
      - name: ssh
        default: https://s3-eu-west-1.amazonaws.com/valohai-examples/horovod-example/horovod_example_ssh
    parameters:
      - name: epochs
        pass-as: --epochs={v}
        type: integer
        default: 12
      - name: batch_size
        pass-as: --batch_size={v}
        type: integer
        default: 128

- step:
    name: worker-keras-mnist
    image: uber/horovod:0.13.11-tf1.10.0-torch0.4.0-py3.5
    command:
      - mkdir -p ~/.keras/datasets/
      - ln -s /valohai/inputs/mnist/* ~/.keras/datasets/
      - mkdir -p /root/.ssh && chmod 0700 /root/.ssh
      - cp /valohai/inputs/ssh/horovod_example_ssh /root/.ssh/id_rsa
      - chmod 0700 /root/.ssh/id_rsa
      - ssh-keygen -y -f /root/.ssh/id_rsa > /root/.ssh/id_rsa.pub
      - cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
      - printenv > /root/.ssh/environment
      - chmod 0700 /root/.ssh/*
      - /usr/sbin/sshd -d -oPermitUserEnvironment=yes -p 12345
    inputs:
      - name: mnist
        default: https://s3.amazonaws.com/img-datasets/mnist.npz
      - name: ssh
        default: https://s3-eu-west-1.amazonaws.com/valohai-examples/horovod-example/horovod_example_ssh

- step:
    name: without-horovod
    image: uber/horovod:0.13.11-tf1.10.0-torch0.4.0-py3.5
    command:
      - mkdir -p ~/.keras/datasets/
      - ln -s /valohai/inputs/mnist/* ~/.keras/datasets/
      - python keras_mnist_advanced.py {parameters}
      - mv checkpoint-*.h5 /valohai/outputs
    inputs:
      - name: mnist
        default: https://s3.amazonaws.com/img-datasets/mnist.npz
      - name: ssh
        default: https://s3-eu-west-1.amazonaws.com/valohai-examples/horovod-example/horovod_example_ssh
    parameters:
      - name: epochs
        pass-as: --epochs={v}
        type: integer
        default: 12
      - name: batch_size
        pass-as: --batch_size={v}
        type: integer
        default: 128

- step:
    name: single-keras-mnist-run
    image: uber/horovod:0.13.11-tf1.10.0-torch0.4.0-py3.5
    command:
      - mkdir -p ~/.keras/datasets/
      - ln -s /valohai/inputs/mnist/* ~/.keras/datasets/
      - mpirun -np 1 -H localhost:1 python keras_mnist_advanced.py {parameters}
      - mv checkpoint-*.h5 /valohai/outputs
    parameters:
      - name: epochs
        pass-as: --epochs={v}
        type: integer
        default: 12
      - name: batch_size
        pass-as: --batch_size={v}
        type: integer
        default: 128
    inputs:
      - name: mnist
        default: https://s3.amazonaws.com/img-datasets/mnist.npz

- step:
    name: environment-check
    image: uber/horovod:0.13.11-tf1.10.0-torch0.4.0-py3.5
    command:
      - printenv
      - nvidia-smi
      - nvcc --version | grep release
      - cat /usr/include/x86_64-linux-gnu/cudnn_v*.h | grep CUDNN_MAJOR -A 2
      - python --version
      - python -c "import torch; print(torch.__version__);"
      - python -c "import keras; print(keras.__version__);"
      - python -c "import tensorflow; print(tensorflow.__version__);"
      - python -c "from tensorflow.python.client import device_lib; device_lib.list_local_devices();"
